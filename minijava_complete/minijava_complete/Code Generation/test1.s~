	.text
	.globl asm_main
asm_main:
	pushq %rbp
	movq %rsp,%rbp
	pushq %rdi
	call ExampleClass$ExampleClass
	movq %rax,%rdi
	movq $10,%rax
	pushq %rax
	movq (%rdi),%rax
	lea 16(%rax),%rax
	call *(%rax)
	popq %rdx
	popq %rdi
	pushq %rdi
	movq %rax,%rdi
	call put
	popq %rdi
	movq %rbp,%rsp
	popq %rbp
	ret 

	.data
RunClass$$: .quad 0

ExampleClass$compute:
	pushq %rbp
	movq %rsp,%rbp
	subq $8,%rsp
	movq $5,%rax
	pushq %rax
	incq %rax
	shlq $3,%rax
	pushq %rdi
	movq %rax,%rdi
	call mjmalloc
	popq %rdi
	popq %rdx
	movq %rdx,0(%rax)
	movq $8,%rcx
	pushq %rax
test1:
	testq $0,%rdx
	je done1
	addq %rcx,%rax
	movq $0,(%rax)
	shlq $2,%rcx
	decq %rdx
	jmp test1
done1:
	popq %rax
	movq %rax,8(%rdi)
	pushq %rdi
	movq $5,%rax
	pushq %rax
	movq $3,%rax
	pushq %rax
	movq 16(%rbp),%rax
	pushq %rax
	movq (%rdi),%rax
	lea 24(%rax),%rax
	call *(%rax)
	popq %rdx
	popq %rdx
	popq %rdx
	popq %rdi
	movq %rax,-8(%rbp)
	movq 8(%rdi),%rax
	movq 0(%rax),%rax
	movq %rbp,%rsp
	popq %rbp
	ret 
ExampleClass$modify:
	pushq %rbp
	movq %rsp,%rbp
	subq $16,%rsp
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	pushq %rax
	incq %rax
	shlq $3,%rax
	pushq %rdi
	movq %rax,%rdi
	call mjmalloc
	popq %rdi
	popq %rdx
	movq %rdx,0(%rax)
	movq $8,%rcx
	pushq %rax
test2:
	testq $0,%rdx
	je done2
	addq %rcx,%rax
	movq $0,(%rax)
	shlq $2,%rcx
	decq %rdx
	jmp test2
done2:
	popq %rax
	movq %rax,8(%rdi)
	movq 16(%rbp),%rax
	pushq %rax
	movq $2,%rax
	popq %rdx
	negq %rax
	addq %rdx,%rax
	pushq %rax
	movq $32,%rax
	popq %rdx
	movq -8(%rdi),%rcx
	movq %rax,8(%rcx,%rdx,8)
	movq -8(%rbp),%rax
	pushq %rdi
	movq %rax,%rdi
	call put
	popq %rdi
	movq -16(%rbp),%rax
	pushq %rdi
	movq %rax,%rdi
	call put
	popq %rdi
	movq $0,%rax
	movq %rbp,%rsp
	popq %rbp
	ret 
ExampleClass$ExampleClass:
	pushq %rbp
	movq %rsp,%rbp
	pushq %rdi
	movq $16,%rdi
	call mjmalloc
	popq %rdi
	leaq ExampleClass$$,%rdx
	movq %rdx,(%rax)
	movq $0,8(%rax)
	movq %rbp,%rsp
	popq %rbp
	ret 

	.data
ExampleClass$$: .quad 0
	.quad ExampleClass$ExampleClass
	.quad ExampleClass$compute
	.quad ExampleClass$modify
